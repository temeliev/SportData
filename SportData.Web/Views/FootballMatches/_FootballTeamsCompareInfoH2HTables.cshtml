@model SportData.Web.Models.FootballTeamsCompareInfoDetailsViewModel
@using SportData.Web.Helpers

@if (@Model.CompareType == SportData.Data.Enums.MatchCompareType.Overall)
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <tbody>
                <tr>
                    <td colspan="5" class="caption">@string.Format("{0}: {1}", @Resources.Resources.LastMatchesCaption, @Model.HostMatches.FirstOrDefault().HomeTeamName)</td>
                </tr>
                @foreach (var match in Model.HostMatches)
                {
                    <tr>
                        <td class="col-lg-1 table-col">
                            @Html.DisplayFor(modelItem => match.ShortMatchDate)
                        </td>
                        <td class="col-lg-1 table-col">
                            @Html.Image(match.CompetitionEmblemUrl, "no image", new { @class = "", @width = "20", @height = "20" })
                        </td>
                        <td class="col-lg-4 table-col-left">
                            @Html.DisplayFor(modelItem => match.HomeTeamName)
                        </td>
                        <td class="col-lg-4 table-col-left">
                            @Html.DisplayFor(modelItem => match.AwayTeamName)
                        </td>
                        <td class="col-lg-1 table-col">
                            @Html.DisplayFor(modelItem => match.MatchResult)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <tbody>
                <tr>
                    <td colspan="5" class="caption">@string.Format("{0}: {1}", @Resources.Resources.LastMatchesCaption, @Model.VisitorMatches.FirstOrDefault().AwayTeamName)</td>
                </tr>
                @foreach (var match in Model.VisitorMatches)
                {
                    <tr>
                        <td class="col-lg-1 table-col">
                            @Html.DisplayFor(modelItem => match.ShortMatchDate)
                        </td>
                        <td class="col-lg-1 table-col">
                            @Html.Image(match.CompetitionEmblemUrl, "no image", new { @class = "", @width = "20", @height = "20" })
                        </td>
                        <td class="col-lg-4 table-col-left">
                            @Html.DisplayFor(modelItem => match.HomeTeamName)
                        </td>
                        <td class="col-lg-4 table-col-left">
                            @Html.DisplayFor(modelItem => match.AwayTeamName)
                        </td>
                        <td class="col-lg-1 table-col">
                            @Html.DisplayFor(modelItem => match.MatchResult)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <tbody>
                <tr>
                    <td colspan="5" class="caption">@string.Format("{0}: {1} - {2}", @Resources.Resources.HeadToHeadCaption, @Model.BetweenMatches.FirstOrDefault().HomeTeamName, @Model.BetweenMatches.FirstOrDefault().AwayTeamName)</td>
                </tr>
                @foreach (var match in Model.BetweenMatches)
                {
                    <tr>
                        <td class="col-lg-1 table-col">
                            @Html.DisplayFor(modelItem => match.ShortMatchDate)
                        </td>
                        <td class="col-lg-1 table-col">
                            @Html.Image(match.CompetitionEmblemUrl, "no image", new { @class = "", @width = "20", @height = "20" })
                        </td>
                        <td class="col-lg-4 table-col-left">
                            @Html.DisplayFor(modelItem => match.HomeTeamName)
                        </td>
                        <td class="col-lg-4 table-col-left">
                            @Html.DisplayFor(modelItem => match.AwayTeamName)
                        </td>
                        <td class="col-lg-1 table-col">
                            @Html.DisplayFor(modelItem => match.MatchResult)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else if (@Model.CompareType == SportData.Data.Enums.MatchCompareType.Host)
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <tbody>
                <tr>
                    <td colspan="5" class="caption">@string.Format("{0}: {1}", @Resources.Resources.LastMatchesCaption, @Model.HostMatches.FirstOrDefault().HomeTeamName)</td>
                </tr>
                @foreach (var match in Model.HostMatches)
                {
                    <tr>
                        <td class="col-lg-1 table-col">
                            @Html.DisplayFor(modelItem => match.ShortMatchDate)
                        </td>
                        <td class="col-lg-1 table-col">
                            @Html.Image(match.CompetitionEmblemUrl, "no image", new { @class = "", @width = "20", @height = "20" })
                        </td>
                        <td class="col-lg-4 table-col-left">
                            @Html.DisplayFor(modelItem => match.HomeTeamName)
                        </td>
                        <td class="col-lg-4 table-col-left">
                            @Html.DisplayFor(modelItem => match.AwayTeamName)
                        </td>
                        <td class="col-lg-1 table-col">
                            @Html.DisplayFor(modelItem => match.MatchResult)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <tbody>
                <tr>
                    <td colspan="5" class="caption">@string.Format("{0}: {1} - {2}", @Resources.Resources.HeadToHeadCaption, @Model.BetweenMatches.FirstOrDefault().HomeTeamName, @Model.BetweenMatches.FirstOrDefault().AwayTeamName)</td>
                </tr>
                @foreach (var match in Model.BetweenMatches)
                {
                    <tr>
                        <td class="col-lg-1 table-col">
                            @Html.DisplayFor(modelItem => match.ShortMatchDate)
                        </td>
                        <td class="col-lg-1 table-col">
                            @Html.Image(match.CompetitionEmblemUrl, "no image", new { @class = "", @width = "20", @height = "20" })
                        </td>
                        <td class="col-lg-4 table-col-left">
                            @Html.DisplayFor(modelItem => match.HomeTeamName)
                        </td>
                        <td class="col-lg-4 table-col-left">
                            @Html.DisplayFor(modelItem => match.AwayTeamName)
                        </td>
                        <td class="col-lg-1 table-col">
                            @Html.DisplayFor(modelItem => match.MatchResult)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else if (@Model.CompareType == SportData.Data.Enums.MatchCompareType.Visitor)
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered">
            <tbody>
                <tr>
                    <td colspan="5" class="caption">@string.Format("{0}: {1}", @Resources.Resources.LastMatchesCaption, @Model.VisitorMatches.FirstOrDefault().AwayTeamName)</td>
                </tr>
                @foreach (var match in Model.VisitorMatches)
                {
                    <tr>
                        <td class="col-lg-1 table-col">
                            @Html.DisplayFor(modelItem => match.ShortMatchDate)
                        </td>
                        <td class="col-lg-1 table-col">
                            @Html.Image(match.CompetitionEmblemUrl, "no image", new { @class = "", @width = "20", @height = "20" })
                        </td>
                        <td class="col-lg-4 table-col-left">
                            @Html.DisplayFor(modelItem => match.HomeTeamName)
                        </td>
                        <td class="col-lg-4 table-col-left">
                            @Html.DisplayFor(modelItem => match.AwayTeamName)
                        </td>
                        <td class="col-lg-1 table-col">
                            @Html.DisplayFor(modelItem => match.MatchResult)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    @*@if (@Model.BetweenMatches.Any())
    {*@
        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <tbody>
                    <tr>
                        <td colspan="5" class="caption">@string.Format("{0}: {1} - {2}", @Resources.Resources.HeadToHeadCaption, @Model.BetweenMatches.FirstOrDefault().HomeTeamName, @Model.BetweenMatches.FirstOrDefault().AwayTeamName)</td>
                    </tr>
                    @foreach (var match in Model.BetweenMatches)
                    {
                        <tr>
                            <td class="col-lg-1 table-col">
                                @Html.DisplayFor(modelItem => match.ShortMatchDate)
                            </td>
                            <td class="col-lg-1 table-col">
                                @Html.Image(match.CompetitionEmblemUrl, "no image", new { @class = "", @width = "20", @height = "20" })
                            </td>
                            <td class="col-lg-4 table-col-left">
                                @Html.DisplayFor(modelItem => match.HomeTeamName)
                            </td>
                            <td class="col-lg-4 table-col-left">
                                @Html.DisplayFor(modelItem => match.AwayTeamName)
                            </td>
                            <td class="col-lg-1 table-col">
                                @Html.DisplayFor(modelItem => match.MatchResult)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    //}
}
